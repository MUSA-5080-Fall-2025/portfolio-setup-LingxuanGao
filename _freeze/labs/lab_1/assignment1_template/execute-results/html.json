{
  "hash": "9e8edaa7466aa8c23831ba04d5237b8c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 1: Census Data Quality for Policy Decisions\"\nsubtitle: \"Evaluating Data Reliability for Algorithmic Decision-Making\"\nauthor: \"Lingxuan Gao\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\nexecute:\n  warning: false\n  message: false\n---\n\n# Assignment Overview\n\n## Scenario\n\nYou are a data analyst for the **[Pennsylvania] Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n## Learning Objectives\n\n- Apply dplyr functions to real census data for policy analysis\n- Evaluate data quality using margins of error \n- Connect technical analysis to algorithmic decision-making\n- Identify potential equity implications of data reliability issues\n- Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this assignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:\n\n```\n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n```\nIf there is a special character like comma, you need use double quote mark so that the quarto can identify this as text\n\n# Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(knitr)\n\n# Set your Census API key\ncensus_api_key(\"55588cff24a2b44b2f030ee1581c8d854c1839da\", install = TRUE, overwrite = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"55588cff24a2b44b2f030ee1581c8d854c1839da\"\n```\n\n\n:::\n\n```{.r .cell-code}\nreadRenviron(\"~/.Renviron\") \n\n# Choose your state for analysis - assign it to a variable called my_state\nmy_state <- \"Pennsylvania\"\n```\n:::\n\n\n**State Selection:** I have chosen **[Pennsylvania]** for this analysis because: [It's where I am.]\n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.\n\n**Requirements:**\n- Geography: county level\n- Variables: median household income (B19013_001) and total population (B01003_001)  \n- Year: 2022\n- Survey: acs5\n- Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the `variables = c(name = \"code\")` syntax.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your get_acs() code here\ncounty_data <- get_acs(\n  geography = \"county\", \n  variables = c(\n    median_income = \"B19013_001\",   \n    total_pop = \"B01003_001\"    \n  ),\n  year = 2022,\n  survey = \"acs5\",\n  state = my_state,\n  output = \"wide\"\n)\n\n# Clean the county names to remove state name and \"County\"\ncounty_data <- county_data %>%\n  mutate(NAME = str_remove(NAME, \" County, Pennsylvania\"))\n\n# Hint: use mutate() with str_remove()\n\n# Display the first few rows\nhead(county_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  GEOID NAME      median_incomeE median_incomeM total_popE total_popM\n  <chr> <chr>              <dbl>          <dbl>      <dbl>      <dbl>\n1 42001 Adams              78975           3334     104604         NA\n2 42003 Allegheny          72537            869    1245310         NA\n3 42005 Armstrong          61011           2202      65538         NA\n4 42007 Beaver             67194           1531     167629         NA\n5 42009 Bedford            58337           2606      47613         NA\n6 42011 Berks              74617           1191     428483         NA\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(county_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 67\nColumns: 6\n$ GEOID          <chr> \"42001\", \"42003\", \"42005\", \"42007\", \"42009\", \"42011\", \"…\n$ NAME           <chr> \"Adams\", \"Allegheny\", \"Armstrong\", \"Beaver\", \"Bedford\",…\n$ median_incomeE <dbl> 78975, 72537, 61011, 67194, 58337, 74617, 59386, 60650,…\n$ median_incomeM <dbl> 3334, 869, 2202, 1531, 2606, 1191, 2058, 2167, 1516, 21…\n$ total_popE     <dbl> 104604, 1245310, 65538, 167629, 47613, 428483, 122640, …\n$ total_popM     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n\n\n:::\n:::\n\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create reliability categories.\n\n**Requirements:**\n- Calculate MOE percentage: (margin of error / estimate) * 100\n- Create reliability categories:\n  - High Confidence: MOE < 5%\n  - Moderate Confidence: MOE 5-10%  \n  - Low Confidence: MOE > 10%\n- Create a flag for unreliable estimates (MOE > 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentage and reliability categories using mutate()\ncounty_data <- county_data %>%\n  mutate(\n    moe_pct_income = median_incomeM / median_incomeE * 100,\n    reliability = case_when(\n      moe_pct_income < 5 ~ \"High Confidence\",\n      moe_pct_income >= 5 & moe_pct_income <= 10 ~ \"Moderate Confidence\",\n      moe_pct_income > 10 ~ \"Low Confidence\"\n    ),\n    unreliable_flag = moe_pct_income > 10   # TRUE if MOE > 10%\n  )\n\n# Create a summary showing count of counties in each reliability category\nreliability_summary <- county_data %>%\n  count(reliability) %>%\n  mutate(percentage = n / sum(n) * 100)\n# Hint: use count() and mutate() to add percentages\nreliability_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  reliability             n percentage\n  <chr>               <int>      <dbl>\n1 High Confidence        57       85.1\n2 Moderate Confidence    10       14.9\n```\n\n\n:::\n:::\n\n\n\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:**\n- Sort by MOE percentage (highest first)\n- Select the top 5 counties\n- Display: county name, median income, margin of error, MOE percentage, reliability category\n- Format as a professional table using `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create table of top 5 counties by MOE percentage\ntop5_MOE <- county_data %>%\n  arrange(desc(moe_pct_income)) %>%\n  slice(1:5) %>%\n  select(NAME, median_incomeE, median_incomeM, moe_pct_income, reliability)\n\n# Format as table with kable() - include appropriate column names and caption\nknitr::kable(\n  top5_MOE,\n  digits = 2,\n  caption = \"Top 5 Counties with the highest MOE percentages\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 5 Counties with the highest MOE percentages\n\n|NAME     | median_incomeE| median_incomeM| moe_pct_income|reliability         |\n|:--------|--------------:|--------------:|--------------:|:-------------------|\n|Forest   |          46188|           4612|           9.99|Moderate Confidence |\n|Sullivan |          62910|           5821|           9.25|Moderate Confidence |\n|Union    |          64914|           4753|           7.32|Moderate Confidence |\n|Montour  |          72626|           5146|           7.09|Moderate Confidence |\n|Elk      |          61672|           4091|           6.63|Moderate Confidence |\n\n\n:::\n:::\n\n\n**Data Quality Commentary:**\n\n[The five counties have income margin of error percentages between 6% and 10%. They are all in the “Moderate Confidence” group. This means the estimates are usable but have some uncertainty. Forest and Sullivan counties are close to 10%, so the true median income may be different from the estimate.]\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\nselected_counties <- bind_rows(\n  county_data %>% filter(moe_pct_income < 5) %>% slice(1),     # High\n  county_data %>% filter(moe_pct_income >= 5 & moe_pct_income <= 10) %>% slice(1),  # Moderate\n  county_data %>% filter(moe_pct_income > 10) %>% slice(1)     # Low\n)\n\n# Display the selected counties with their key characteristics\nknitr::kable(\n  selected_counties %>%\n    select(NAME, median_incomeE, moe_pct_income, reliability),\n  digits = 2,\n  col.names = c(\"county name\", \"median income\", \"MOE percentage\", \"reliability category\"),\n  caption = \"Selected Counties by MOE Percentage (Different Confidence Levels)\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Selected Counties by MOE Percentage (Different Confidence Levels)\n\n|county name | median income| MOE percentage|reliability category |\n|:-----------|-------------:|--------------:|:--------------------|\n|Adams       |         78975|           4.22|High Confidence      |\n|Cameron     |         46186|           5.64|Moderate Confidence  |\n\n\n:::\n\n```{.r .cell-code}\n# Show: county name, median income, MOE percentage, reliability category\n```\n:::\n\n\n**Comment on the output:** \n[In this result, Adams County's data is relatively stable and reliable. For Cameron County,the data are still usable, but the estimate comes with more uncertainty.]\n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected counties.\n\n**Requirements:**\n- Geography: tract level\n- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)\n- Use the same state and year as before\n- Output format: wide\n- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define your race/ethnicity variables with descriptive names\nrace_vars <- c(\n  white = \"B03002_003\",\n  black = \"B03002_004\",\n  hispanic = \"B03002_012\",\n  total_pop = \"B03002_001\"\n)\n\n# Use get_acs() to retrieve tract-level data\ntract_demo <- get_acs(\n  geography = \"tract\",\n  variables = race_vars,\n  year = 2022,\n  survey = \"acs5\",\n  state = my_state,\n  county = c(\"001\", \"023\"),  \n  output = \"wide\"\n)\n\n# Hint: You may need to specify county codes in the county parameter\n\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\ntract_demo <- tract_demo %>%\n  mutate(\n    pct_white = (whiteE / total_popE) * 100,\n    pct_black = (blackE / total_popE) * 100,\n    pct_hispanic = (hispanicE / total_popE) * 100\n  )\n\n# Add readable tract and county name columns using str_extract() or similar\nlibrary(stringr)\n\ntract_demo <- tract_demo %>%\n  mutate(\n    county_code = str_extract(GEOID, \"(?<=^..)...\"),   # 前2位是州，后3位是县\n    tract_code  = str_extract(GEOID, \"(?<=^.....).*\")  # 从第6位开始都是tract\n  )\n```\n:::\n\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\ntop_hispanic_tract <- tract_demo %>%\n  arrange(desc(pct_hispanic)) %>%\n  slice(1) %>%\n  select(county_code, tract_code, pct_hispanic, pct_white, pct_black)\n\n# Calculate average demographics by county using group_by() and summarize()\ncounty_demographics <- tract_demo %>%\n  group_by(county_code) %>%\n  summarize(\n    tracts = n(),\n    avg_white = mean(pct_white, na.rm = TRUE),\n    avg_black = mean(pct_black, na.rm = TRUE),\n    avg_hispanic = mean(pct_hispanic, na.rm = TRUE)\n  )\n\n# Show: number of tracts, average percentage for each racial/ethnic group\n\n# Create a nicely formatted table of your results using kable()\nknitr::kable(\n  county_demographics,\n  digits = 1,\n  col.names = c(\"County Code\", \"Tracts\", \"Avg % White\", \"Avg % Black\", \"Avg % Hispanic\"),\n  caption = \"Average Demographics by County (Selected Counties)\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Average Demographics by County (Selected Counties)\n\n|County Code | Tracts| Avg % White| Avg % Black| Avg % Hispanic|\n|:-----------|------:|-----------:|-----------:|--------------:|\n|001         |     27|        88.3|         1.3|            7.1|\n|023         |      2|        93.2|         0.0|            2.1|\n\n\n:::\n\n```{.r .cell-code}\ntop_hispanic_tract\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n  county_code tract_code pct_hispanic pct_white pct_black\n  <chr>       <chr>             <dbl>     <dbl>     <dbl>\n1 001         031502             20.9      73.1      2.74\n```\n\n\n:::\n:::\n\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.\n\n**Requirements:**\n- Calculate MOE percentages for each demographic variable\n- Flag tracts where any demographic variable has MOE > 15%\n- Create summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\ntract_demo <- tract_demo %>%\n  mutate(\n    moe_pct_white    = (whiteM / whiteE) * 100,\n    moe_pct_black    = (blackM / blackE) * 100,\n    moe_pct_hispanic = (hispanicM / hispanicE) * 100\n  )\n\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\ntract_demo <- tract_demo %>%\n  mutate(\n    high_moe_flag = moe_pct_white > 15 | moe_pct_black > 15 | moe_pct_hispanic > 15,\n  )\n\n# Create summary statistics showing how many tracts have data quality issues\nmoe_summary <- tract_demo %>%\n  summarize(\n    total_tracts = n(),\n    tracts_high_moe = sum(high_moe_flag, na.rm = TRUE),\n    pct_high_moe = (tracts_high_moe / total_tracts) * 100\n  )\n\nmoe_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  total_tracts tracts_high_moe pct_high_moe\n         <int>           <int>        <dbl>\n1           29              29          100\n```\n\n\n:::\n:::\n\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n# Use group_by() and summarize() to create this comparison\npattern_summary <- tract_demo %>%\n  group_by(high_moe_flag) %>%\n\n  summarize(\n    tracts = n(),\n    avg_pop = mean(total_popE, na.rm = TRUE),\n    avg_white = mean(pct_white, na.rm = TRUE),\n    avg_black = mean(pct_black, na.rm = TRUE),\n    avg_hispanic = mean(pct_hispanic, na.rm = TRUE)\n  )\n\n# Create a professional table showing the patterns\nknitr::kable(\n  pattern_summary,\n  digits = 1,\n  col.names = c(\"High MOE?\", \"Tracts\", \"Avg Population\", \"Avg White (%)\", \"Avg Black (%)\", \"Avg Hispanic (%)\"),\n  caption = \"Community Characteristics by Data Reliability\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Community Characteristics by Data Reliability\n\n|High MOE? | Tracts| Avg Population| Avg White (%)| Avg Black (%)| Avg Hispanic (%)|\n|:---------|------:|--------------:|-------------:|-------------:|----------------:|\n|TRUE      |     29|         3763.4|          88.7|           1.2|              6.8|\n\n\n:::\n:::\n\n\n**Pattern Analysis:** [These high-MOE tracts have smaller populations, about 3,700 people on average. They are mostly White, with low Black and Hispanic shares. Small sample sizes make their data less stable.]\n\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from all four analyses.\n\n**Executive Summary Requirements:**\n1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?\n2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?\n3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?\n4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?\n\n**Executive Summary:**\n\n[1.The analysis shows that data quality differences are not random but systematic. Smaller tracts tend to have higher margins of error, with income and demographic data being less reliable.\n2.Based on my analysis, the communities which are often small and White-majority, face the greatest risk of algorithmic bias.\n3.The main drivers are survey design and population structure. Small samples and demographic homogeneity lead to unstable estimates.\n4.The Department should implement MOE checks before data use, flagging tracts with MOE above 15% for review. For small-population tracts, aggregation or multi-year averages should be used. Equity monitoring should also be implemented to ensure high-MOE communities are not overlooked in resource allocation.]\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\nrecommendations_data <- county_data %>%\n  select(NAME, median_incomeE, moe_pct_income, reliability) %>%\n  mutate(\n    recommendation = case_when(\n      reliability == \"High Confidence\" ~ \"Safe for algorithmic decisions\",\n      reliability == \"Moderate Confidence\" ~ \"Use with caution - monitor outcomes\",\n      reliability == \"Low Confidence\" ~ \"Requires manual review or additional data\",\n      TRUE ~ \"Unclassified\"\n    )\n  )\n# Format as a professional table with kable()\nknitr::kable(\n  recommendations_data,\n  digits = 1,\n  col.names = c(\"County\", \"Median Income\", \"MOE Percentage\", \"Reliability Category\", \"Algorithm Recommendation\"),\n  caption = \"Decision Framework for Algorithm Implementation by County\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Decision Framework for Algorithm Implementation by County\n\n|County         | Median Income| MOE Percentage|Reliability Category |Algorithm Recommendation            |\n|:--------------|-------------:|--------------:|:--------------------|:-----------------------------------|\n|Adams          |         78975|            4.2|High Confidence      |Safe for algorithmic decisions      |\n|Allegheny      |         72537|            1.2|High Confidence      |Safe for algorithmic decisions      |\n|Armstrong      |         61011|            3.6|High Confidence      |Safe for algorithmic decisions      |\n|Beaver         |         67194|            2.3|High Confidence      |Safe for algorithmic decisions      |\n|Bedford        |         58337|            4.5|High Confidence      |Safe for algorithmic decisions      |\n|Berks          |         74617|            1.6|High Confidence      |Safe for algorithmic decisions      |\n|Blair          |         59386|            3.5|High Confidence      |Safe for algorithmic decisions      |\n|Bradford       |         60650|            3.6|High Confidence      |Safe for algorithmic decisions      |\n|Bucks          |        107826|            1.4|High Confidence      |Safe for algorithmic decisions      |\n|Butler         |         82932|            2.6|High Confidence      |Safe for algorithmic decisions      |\n|Cambria        |         54221|            3.3|High Confidence      |Safe for algorithmic decisions      |\n|Cameron        |         46186|            5.6|Moderate Confidence  |Use with caution - monitor outcomes |\n|Carbon         |         64538|            5.3|Moderate Confidence  |Use with caution - monitor outcomes |\n|Centre         |         70087|            2.8|High Confidence      |Safe for algorithmic decisions      |\n|Chester        |        118574|            1.7|High Confidence      |Safe for algorithmic decisions      |\n|Clarion        |         58690|            4.4|High Confidence      |Safe for algorithmic decisions      |\n|Clearfield     |         56982|            2.8|High Confidence      |Safe for algorithmic decisions      |\n|Clinton        |         59011|            3.9|High Confidence      |Safe for algorithmic decisions      |\n|Columbia       |         59457|            3.8|High Confidence      |Safe for algorithmic decisions      |\n|Crawford       |         58734|            3.9|High Confidence      |Safe for algorithmic decisions      |\n|Cumberland     |         82849|            2.2|High Confidence      |Safe for algorithmic decisions      |\n|Dauphin        |         71046|            2.3|High Confidence      |Safe for algorithmic decisions      |\n|Delaware       |         86390|            1.5|High Confidence      |Safe for algorithmic decisions      |\n|Elk            |         61672|            6.6|Moderate Confidence  |Use with caution - monitor outcomes |\n|Erie           |         59396|            2.6|High Confidence      |Safe for algorithmic decisions      |\n|Fayette        |         55579|            4.2|High Confidence      |Safe for algorithmic decisions      |\n|Forest         |         46188|           10.0|Moderate Confidence  |Use with caution - monitor outcomes |\n|Franklin       |         71808|            3.0|High Confidence      |Safe for algorithmic decisions      |\n|Fulton         |         63153|            3.6|High Confidence      |Safe for algorithmic decisions      |\n|Greene         |         66283|            6.4|Moderate Confidence  |Use with caution - monitor outcomes |\n|Huntingdon     |         61300|            4.7|High Confidence      |Safe for algorithmic decisions      |\n|Indiana        |         57170|            4.6|High Confidence      |Safe for algorithmic decisions      |\n|Jefferson      |         56607|            3.4|High Confidence      |Safe for algorithmic decisions      |\n|Juniata        |         61915|            4.8|High Confidence      |Safe for algorithmic decisions      |\n|Lackawanna     |         63739|            2.6|High Confidence      |Safe for algorithmic decisions      |\n|Lancaster      |         81458|            1.8|High Confidence      |Safe for algorithmic decisions      |\n|Lawrence       |         57585|            3.1|High Confidence      |Safe for algorithmic decisions      |\n|Lebanon        |         72532|            2.7|High Confidence      |Safe for algorithmic decisions      |\n|Lehigh         |         74973|            2.0|High Confidence      |Safe for algorithmic decisions      |\n|Luzerne        |         60836|            2.4|High Confidence      |Safe for algorithmic decisions      |\n|Lycoming       |         63437|            4.4|High Confidence      |Safe for algorithmic decisions      |\n|McKean         |         57861|            4.7|High Confidence      |Safe for algorithmic decisions      |\n|Mercer         |         57353|            3.6|High Confidence      |Safe for algorithmic decisions      |\n|Mifflin        |         58012|            3.4|High Confidence      |Safe for algorithmic decisions      |\n|Monroe         |         80656|            3.2|High Confidence      |Safe for algorithmic decisions      |\n|Montgomery     |        107441|            1.3|High Confidence      |Safe for algorithmic decisions      |\n|Montour        |         72626|            7.1|Moderate Confidence  |Use with caution - monitor outcomes |\n|Northampton    |         82201|            1.9|High Confidence      |Safe for algorithmic decisions      |\n|Northumberland |         55952|            2.7|High Confidence      |Safe for algorithmic decisions      |\n|Perry          |         76103|            3.2|High Confidence      |Safe for algorithmic decisions      |\n|Philadelphia   |         57537|            1.4|High Confidence      |Safe for algorithmic decisions      |\n|Pike           |         76416|            4.9|High Confidence      |Safe for algorithmic decisions      |\n|Potter         |         56491|            4.4|High Confidence      |Safe for algorithmic decisions      |\n|Schuylkill     |         63574|            2.4|High Confidence      |Safe for algorithmic decisions      |\n|Snyder         |         65914|            5.6|Moderate Confidence  |Use with caution - monitor outcomes |\n|Somerset       |         57357|            2.8|High Confidence      |Safe for algorithmic decisions      |\n|Sullivan       |         62910|            9.3|Moderate Confidence  |Use with caution - monitor outcomes |\n|Susquehanna    |         63968|            3.1|High Confidence      |Safe for algorithmic decisions      |\n|Tioga          |         59707|            3.2|High Confidence      |Safe for algorithmic decisions      |\n|Union          |         64914|            7.3|Moderate Confidence  |Use with caution - monitor outcomes |\n|Venango        |         59278|            3.4|High Confidence      |Safe for algorithmic decisions      |\n|Warren         |         57925|            5.2|Moderate Confidence  |Use with caution - monitor outcomes |\n|Washington     |         74403|            2.4|High Confidence      |Safe for algorithmic decisions      |\n|Wayne          |         59240|            4.8|High Confidence      |Safe for algorithmic decisions      |\n|Westmoreland   |         69454|            2.0|High Confidence      |Safe for algorithmic decisions      |\n|Wyoming        |         67968|            3.9|High Confidence      |Safe for algorithmic decisions      |\n|York           |         79183|            1.8|High Confidence      |Safe for algorithmic decisions      |\n\n\n:::\n:::\n\n\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to the department.\n\n1. **Counties suitable for immediate algorithmic implementation:** \n[Counties:\nAdams, Allegheny, Armstrong, Beaver, Bedford, Berks, Blair, Bradford, Bucks, Butler, Cambria, Centre, Chester, Clarion, Clearfield, Clinton, Columbia, Crawford, Cumberland, Dauphin, Delaware, Erie, Fayette, Franklin, Fulton, Huntingdon, Indiana, Jefferson, Juniata, Lackawanna, Lancaster, Lawrence, Lebanon, Lehigh, Luzerne, Lycoming, McKean, Mercer, Mifflin, Monroe, Montgomery, Northampton, Northumberland, Perry, Philadelphia, Pike, Potter, Schuylkill, Somerset, Susquehanna, Tioga, Venango, Washington, Wayne, Westmoreland, Wyoming, York\nTheir income MOE percentages are below 5%, which makes the data highly reliable and appropriate for immediate algorithmic use.]\n\n2. **Counties requiring additional oversight:** \n[Counties:\nCameron, Carbon, Elk, Forest, Greene, Montour, Snyder, Sullivan, Union, Warren\nAlgorithms can be applied but require additional monitoring, such as:\nRegularly validating outputs against ground realities\nTracking resource allocation to prevent bias amplification]\n\n3. **Counties needing alternative approaches:** \n[No counties are currently marked as Low Confidence, but if any exceed a 15% MOE threshold, algorithms should not be used directly. We can use:\nManual review by analysts\nSupplemental surveys for more data\nData aggregation of small tracts to reduce error]\n\n## Questions for Further Investigation\n\n[1.Do high-MOE communities show spatial clustering, such as being concentrated in rural areas?\nBeyond population size and racial composition, are economic factors (e.g., poverty rates, housing types) also systematically related to data quality?]\n\n# Technical Notes\n\n**Data Sources:** \n- U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates\n- Retrieved via tidycensus R package on [date]\n\n**Reproducibility:** \n- All analysis conducted in R version [R4.5.1]\n- Census API key required for replication\n- Complete code and documentation available at: [https://musa-5080-fall-2025.github.io/portfolio-setup-LingxuanGao/labs/lab_1/assignment1_template.html]\n\n**Methodology Notes:**\n[Data Source:\nThe analysis used 'ACS 2022 5-year estimates' data, accessed via the tidycensus package.\nData Processing:\nVariables were cleaned and renamed; MOE percentages were calculated as the reliability measure; GEOIDs were parsed into state, county, and tract codes.\nGeographic Scope:\nPennsylvania was selected as the study area to align with class examples and allow direct comparison.\nAnalytical Choices:\nA threshold of MOE > 15% was set to flag high error; both county- and tract-level data were used to compare reliability across spatial scales.]\n\n**Limitations:**\n[ACS data are sample-based, and small-population communities (especially rural tracts) have large margins of error, making some results unstable.]\n\n---\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n- [ ] All code chunks run without errors\n- [ ] All \"[Fill this in]\" prompts have been completed\n- [ ] Tables are properly formatted and readable\n- [ ] Executive summary addresses all four required components\n- [ ] Portfolio navigation includes this assignment\n- [ ] Census API key is properly set \n- [ ] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`",
    "supporting": [
      "assignment1_template_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}